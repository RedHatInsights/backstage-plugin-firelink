{"version":3,"file":"static/892.ac37c823.chunk.js","mappings":"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","sources":["webpack://internal.backstage-plugin-firelink/./src/components/FirelinkComponent/FirelinkComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Typography, Paper, Tooltip, Button, Grid } from '@material-ui/core';\nimport { Header, Page, Content } from '@backstage/core-components';\nimport { useApi, configApiRef } from '@backstage/core-plugin-api';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Link from '@material-ui/core/Link';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nexport const FirelinkComponent = () => {\n  // Get Backstage objects\n  const config = useApi(configApiRef);\n  // Constants\n  const backendUrl = config.getString('backend.baseUrl');\n  const proxyUrl = `${backendUrl}/api/proxy/ephemeral`;\n\n  const [namespaces, setNamespaces] = useState([]);\n  const [namespaceReservations, setNamespaceReservations] = useState([]);\n  const [namespacesLoading, setNamespacesLoading] = useState(true);\n  const [namespaceReservationsLoading, setNamespaceReservationsLoading] =\n    useState(true);\n  const [error, setError] = useState(null);\n\n  const TruncatedText = ({ text, max }) => {\n    if (text.length <= max) {\n      return <Typography>{text}</Typography>;\n    }\n\n    const truncatedText = text.slice(0, max) + '...';\n\n    return (\n      <Tooltip title={text}>\n        <Typography style={{ cursor: 'pointer' }}>{truncatedText}</Typography>\n      </Tooltip>\n    );\n  };\n\n  function getEphemeralNamespaces() {\n    setNamespacesLoading(true);\n    const apiUrl = `${proxyUrl}/api/v1/namespaces`; // Replace with your Kubernetes API server URL\n    fetch(apiUrl)\n      .then(response => {\n        if (!response.ok) {\n          setNamespacesLoading(false);\n          throw new Error(`Error fetching namespaces: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        // Filter namespaces prefixed with \"ephemeral-\"\n        const ephemeralNamespaces = data.items.filter(\n          namespace =>\n            namespace.metadata.name.startsWith('ephemeral-') &&\n            !namespace.metadata.name.includes('system'),\n        );\n        setNamespaces(ephemeralNamespaces);\n        setNamespacesLoading(false);\n      })\n      .catch(error => {\n        setError(\n          new Error(`Error fetching namespaces: ${response.statusText}`),\n        );\n        console.error('Error:', error);\n      });\n  }\n\n  function getNamespaceReservations() {\n    setNamespaceReservationsLoading(true);\n    const apiUrl = `${proxyUrl}/apis/cloud.redhat.com/v1alpha1/namespacereservations`;\n    fetch(apiUrl)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\n            `Error fetching NamespaceReservations: ${response.statusText}`,\n          );\n        }\n        return response.json();\n      })\n      .then(data => {\n        setNamespaceReservations(data);\n        setNamespaceReservationsLoading(false);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        setError(\n          new Error(\n            `Error fetching NamespaceReservations: ${response.statusText}`,\n          ),\n        );\n      });\n  }\n\n  useEffect(() => {\n    getEphemeralNamespaces();\n    getNamespaceReservations();\n  }, []);\n\n  if (error) {\n    return <Typography variant=\"body1\">Error: {error.message}</Typography>;\n  }\n\n  const getReservationForNamespace = namespace => {\n    return namespaceReservations.items.find(\n      reservation => reservation.status.namespace === namespace.metadata.name,\n    );\n  };\n\n  function convertToLocalTime(isoDateString) {\n    const date = new Date(isoDateString);\n    return date.toLocaleString();\n  }\n  const NamespaceRow = ({ namespace }) => {\n    if (namespace.status.phase === 'Terminating') {\n      return null;\n    }\n    const reservation = getReservationForNamespace(namespace);\n    const reserved = reservation ? true : false;\n    return (\n      <TableRow>\n        <TableCell style={{ flex: 1 }}>\n          <Link\n            href={`https://firelink.apps.crc-eph.r9lp.p1.openshiftapps.com/namespace/describe/${namespace.metadata.name}`}\n            target=\"_blank\"\n          >\n            <Typography> {namespace.metadata.name}</Typography>\n          </Link>\n        </TableCell>\n        <TableCell style={{ flex: 1 }}>\n          {reserved ? (\n            <CheckCircleOutlineIcon style={{ color: '#00FF11' }} />\n          ) : (\n            ''\n          )}\n        </TableCell>\n        <TableCell style={{ flex: 1 }}><Typography> {namespace.status.phase}</Typography> </TableCell>\n        <TableCell style={{ flex: 1 }}>\n          {reserved ? (\n            <TruncatedText text={reservation.spec.requester} max={20} />\n          ) : (\n            ''\n          )}\n        </TableCell>\n        <TableCell style={{ flex: 1 }}>\n          {<Typography> {namespace.metadata.labels.pool}</Typography> }\n        </TableCell>\n        <TableCell style={{ flex: 1 }}>\n          {reserved ? convertToLocalTime(reservation.status.expiration) : ''}\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  const refresh = () => {\n    setNamespaceReservationsLoading(true);\n    setNamespacesLoading(true);\n    setError(null);\n    getEphemeralNamespaces();\n    getNamespaceReservations();\n  };\n\n  const reserveNamespace = () => {\n    window.open(\n      'https://firelink.apps.crc-eph.r9lp.p1.openshiftapps.com/namespace/reserve',\n      '_blank',\n    );\n  };\n\n  const NamespaceTable = () => {\n    return (\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n            <TableCell style={{ flex: 1 }}>\n              <Typography variant='button'>Namespace</Typography>\n            </TableCell>\n            <TableCell style={{ flex: 1 }}>\n              <Typography variant='button'>Reserved</Typography>\n            </TableCell>\n            <TableCell style={{ flex: 1 }}>\n              <Typography variant='button'>Status</Typography>\n            </TableCell>\n            <TableCell style={{ flex: 1 }}>\n              <Typography variant='button'>Requester</Typography>\n            </TableCell>\n            <TableCell style={{ flex: 1 }}>\n              <Typography variant='button'>Pool Type</Typography>\n            </TableCell>\n            <TableCell style={{ flex: 1 }}>\n              <Typography variant='button'>Expiration</Typography>\n            </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {namespaces.map(namespace => (\n              <NamespaceRow\n                key={namespace.metadata.name}\n                namespace={namespace}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n\n  return (\n    <Page themeId=\"tool\">\n      <Header title=\"Ephemeral Namespaces\">\n        { namespacesLoading || namespaceReservationsLoading ? null : <Button onClick={refresh}>Refresh</Button> }\n        <Button onClick={reserveNamespace}>Reserve</Button>\n        <Button href=\"https://firelink.apps.crc-eph.r9lp.p1.openshiftapps.com/apps/deploy\" target=\"_blank\">Deploy</Button>\n      </Header>\n      <Content>\n        { namespacesLoading || namespaceReservationsLoading ? <LinearProgress /> : <NamespaceTable /> }\n      </Content>\n    </Page>\n  );\n};\n"],"names":["FirelinkComponent","proxyUrl","useApi","configApiRef","getString","namespaces","setNamespaces","useState","namespaceReservations","setNamespaceReservations","namespacesLoading","setNamespacesLoading","namespaceReservationsLoading","setNamespaceReservationsLoading","error","setError","TruncatedText","text","max","length","Typography","truncatedText","slice","Tooltip","title","style","cursor","getEphemeralNamespaces","fetch","then","response","ok","Error","statusText","json","data","ephemeralNamespaces","items","filter","namespace","metadata","name","startsWith","includes","catch","console","getNamespaceReservations","useEffect","variant","message","NamespaceRow","status","phase","reservation","find","getReservationForNamespace","reserved","TableRow","TableCell","flex","Link","href","target","CheckCircleOutlineIcon","color","spec","requester","labels","pool","isoDateString","expiration","Date","toLocaleString","NamespaceTable","TableContainer","component","Paper","Table","TableHead","TableBody","map","Page","themeId","Header","Button","onClick","window","open","Content","LinearProgress"],"sourceRoot":""}